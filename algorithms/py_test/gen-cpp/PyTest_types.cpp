/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "PyTest_types.h"

#include <algorithm>
#include <ostream>

#include <thrift/TToString.h>

namespace PyTest {


Result::~Result() throw() {
}


void Result::__set_id(const int32_t val) {
  this->id = val;
}

void Result::__set_word(const std::string& val) {
  this->word = val;
}

void swap(Result &a, Result &b) {
  using ::std::swap;
  swap(a.id, b.id);
  swap(a.word, b.word);
  swap(a.__isset, b.__isset);
}

Result::Result(const Result& other0) {
  id = other0.id;
  word = other0.word;
  __isset = other0.__isset;
}
Result::Result( Result&& other1) {
  id = std::move(other1.id);
  word = std::move(other1.word);
  __isset = std::move(other1.__isset);
}
Result& Result::operator=(const Result& other2) {
  id = other2.id;
  word = other2.word;
  __isset = other2.__isset;
  return *this;
}
Result& Result::operator=(Result&& other3) {
  id = std::move(other3.id);
  word = std::move(other3.word);
  __isset = std::move(other3.__isset);
  return *this;
}
void Result::printTo(std::ostream& out) const {
  using ::apache::thrift::to_string;
  out << "Result(";
  out << "id=" << to_string(id);
  out << ", " << "word=" << to_string(word);
  out << ")";
}

} // namespace
